{"ast":null,"code":"/*\n *\n * Address reducer\n *\n */\n\nimport { FETCH_ADDRESS, FETCH_ADDRESSES, ADDRESS_CHANGE, ADDRESS_EDIT_CHANGE, SET_ADDRESS_FORM_ERRORS, SET_ADDRESS_FORM_EDIT_ERRORS, RESET_ADDRESS, ADD_ADDRESS, REMOVE_ADDRESS, SET_ADDRESS_LOADING } from './constants';\nconst initialState = {\n  addresses: [],\n  addressFormData: {\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    zipCode: '',\n    isDefault: false\n  },\n  address: {\n    _id: '',\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    zipCode: '',\n    isDefault: false\n  },\n  formErrors: {},\n  editFormErrors: {}\n};\nconst addressReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ADDRESSES:\n      return {\n        ...state,\n        addresses: action.payload\n      };\n    case FETCH_ADDRESS:\n      return {\n        ...state,\n        address: action.payload,\n        editFormErrors: {}\n      };\n    case ADD_ADDRESS:\n      return {\n        ...state,\n        addresses: [...state.addresses, action.payload]\n      };\n    case REMOVE_ADDRESS:\n      const index = state.addresses.findIndex(b => b._id === action.payload);\n      return {\n        ...state,\n        addresses: [...state.addresses.slice(0, index), ...state.addresses.slice(index + 1)]\n      };\n    case ADDRESS_CHANGE:\n      return {\n        ...state,\n        addressFormData: {\n          ...state.addressFormData,\n          ...action.payload\n        }\n      };\n    case ADDRESS_EDIT_CHANGE:\n      return {\n        ...state,\n        address: {\n          ...state.address,\n          ...action.payload\n        }\n      };\n    case SET_ADDRESS_FORM_ERRORS:\n      return {\n        ...state,\n        formErrors: action.payload\n      };\n    case SET_ADDRESS_FORM_EDIT_ERRORS:\n      return {\n        ...state,\n        editFormErrors: action.payload\n      };\n    case RESET_ADDRESS:\n      return {\n        ...state,\n        addressFormData: {\n          address: '',\n          city: '',\n          state: '',\n          country: '',\n          zipCode: '',\n          isDefault: false\n        },\n        formErrors: {}\n      };\n    case SET_ADDRESS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default addressReducer;","map":{"version":3,"names":["FETCH_ADDRESS","FETCH_ADDRESSES","ADDRESS_CHANGE","ADDRESS_EDIT_CHANGE","SET_ADDRESS_FORM_ERRORS","SET_ADDRESS_FORM_EDIT_ERRORS","RESET_ADDRESS","ADD_ADDRESS","REMOVE_ADDRESS","SET_ADDRESS_LOADING","initialState","addresses","addressFormData","address","city","state","country","zipCode","isDefault","_id","formErrors","editFormErrors","addressReducer","action","type","payload","index","findIndex","b","slice","isLoading"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/Address/reducer.js"],"sourcesContent":["/*\n *\n * Address reducer\n *\n */\n\nimport {\n  FETCH_ADDRESS,\n  FETCH_ADDRESSES,\n  ADDRESS_CHANGE,\n  ADDRESS_EDIT_CHANGE,\n  SET_ADDRESS_FORM_ERRORS,\n  SET_ADDRESS_FORM_EDIT_ERRORS,\n  RESET_ADDRESS,\n  ADD_ADDRESS,\n  REMOVE_ADDRESS,\n  SET_ADDRESS_LOADING\n} from './constants';\n\nconst initialState = {\n  addresses: [],\n  addressFormData: {\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    zipCode: '',\n    isDefault: false\n  },\n  address: {\n    _id: '',\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    zipCode: '',\n    isDefault: false\n  },\n  formErrors: {},\n  editFormErrors: {}\n};\n\nconst addressReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ADDRESSES:\n      return {\n        ...state,\n        addresses: action.payload\n      };\n    case FETCH_ADDRESS:\n      return {\n        ...state,\n        address: action.payload,\n        editFormErrors: {}\n      };\n    case ADD_ADDRESS:\n      return {\n        ...state,\n        addresses: [...state.addresses, action.payload]\n      };\n    case REMOVE_ADDRESS:\n      const index = state.addresses.findIndex(b => b._id === action.payload);\n      return {\n        ...state,\n        addresses: [\n          ...state.addresses.slice(0, index),\n          ...state.addresses.slice(index + 1)\n        ]\n      };\n    case ADDRESS_CHANGE:\n      return {\n        ...state,\n        addressFormData: {\n          ...state.addressFormData,\n          ...action.payload\n        }\n      };\n    case ADDRESS_EDIT_CHANGE:\n      return {\n        ...state,\n        address: {\n          ...state.address,\n          ...action.payload\n        }\n      };\n    case SET_ADDRESS_FORM_ERRORS:\n      return {\n        ...state,\n        formErrors: action.payload\n      };\n    case SET_ADDRESS_FORM_EDIT_ERRORS:\n      return {\n        ...state,\n        editFormErrors: action.payload\n      };\n    case RESET_ADDRESS:\n      return {\n        ...state,\n        addressFormData: {\n          address: '',\n          city: '',\n          state: '',\n          country: '',\n          zipCode: '',\n          isDefault: false\n        },\n        formErrors: {}\n      };\n    case SET_ADDRESS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default addressReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}