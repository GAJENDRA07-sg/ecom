{"ast":null,"code":"/*\n *\n * Account actions\n *\n */\n\nimport { success } from 'react-notification-system-redux';\nimport axios from 'axios';\nimport { ACCOUNT_CHANGE, FETCH_PROFILE, CLEAR_ACCOUNT, SET_PROFILE_LOADING } from './constants';\nimport handleError from '../../utils/error';\nimport { API_URL } from '../../constants';\nexport const accountChange = (name, value) => {\n  let formData = {};\n  formData[name] = value;\n  return {\n    type: ACCOUNT_CHANGE,\n    payload: formData\n  };\n};\nexport const clearAccount = () => {\n  return {\n    type: CLEAR_ACCOUNT\n  };\n};\nexport const setProfileLoading = value => {\n  return {\n    type: SET_PROFILE_LOADING,\n    payload: value\n  };\n};\nexport const fetchProfile = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(setProfileLoading(true));\n      const response = await axios.get(`${API_URL}/user/me`);\n      dispatch({\n        type: FETCH_PROFILE,\n        payload: response.data.user\n      });\n    } catch (error) {\n      handleError(error, dispatch);\n    } finally {\n      dispatch(setProfileLoading(false));\n    }\n  };\n};\nexport const updateProfile = () => {\n  return async (dispatch, getState) => {\n    const profile = getState().account.user;\n    try {\n      const response = await axios.put(`${API_URL}/user`, {\n        profile\n      });\n      const successfulOptions = {\n        title: `${response.data.message}`,\n        position: 'tr',\n        autoDismiss: 1\n      };\n      dispatch({\n        type: FETCH_PROFILE,\n        payload: response.data.user\n      });\n      dispatch(success(successfulOptions));\n    } catch (error) {\n      handleError(error, dispatch);\n    }\n  };\n};","map":{"version":3,"names":["success","axios","ACCOUNT_CHANGE","FETCH_PROFILE","CLEAR_ACCOUNT","SET_PROFILE_LOADING","handleError","API_URL","accountChange","name","value","formData","type","payload","clearAccount","setProfileLoading","fetchProfile","dispatch","getState","response","get","data","user","error","updateProfile","profile","account","put","successfulOptions","title","message","position","autoDismiss"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/Account/actions.js"],"sourcesContent":["/*\n *\n * Account actions\n *\n */\n\nimport { success } from 'react-notification-system-redux';\nimport axios from 'axios';\n\nimport {\n  ACCOUNT_CHANGE,\n  FETCH_PROFILE,\n  CLEAR_ACCOUNT,\n  SET_PROFILE_LOADING\n} from './constants';\nimport handleError from '../../utils/error';\nimport { API_URL } from '../../constants';\n\nexport const accountChange = (name, value) => {\n  let formData = {};\n  formData[name] = value;\n\n  return {\n    type: ACCOUNT_CHANGE,\n    payload: formData\n  };\n};\n\nexport const clearAccount = () => {\n  return {\n    type: CLEAR_ACCOUNT\n  };\n};\n\nexport const setProfileLoading = value => {\n  return {\n    type: SET_PROFILE_LOADING,\n    payload: value\n  };\n};\n\nexport const fetchProfile = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(setProfileLoading(true));\n      const response = await axios.get(`${API_URL}/user/me`);\n\n      dispatch({ type: FETCH_PROFILE, payload: response.data.user });\n    } catch (error) {\n      handleError(error, dispatch);\n    } finally {\n      dispatch(setProfileLoading(false));\n    }\n  };\n};\n\nexport const updateProfile = () => {\n  return async (dispatch, getState) => {\n    const profile = getState().account.user;\n\n    try {\n      const response = await axios.put(`${API_URL}/user`, {\n        profile\n      });\n\n      const successfulOptions = {\n        title: `${response.data.message}`,\n        position: 'tr',\n        autoDismiss: 1\n      };\n\n      dispatch({ type: FETCH_PROFILE, payload: response.data.user });\n\n      dispatch(success(successfulOptions));\n    } catch (error) {\n      handleError(error, dispatch);\n    }\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,QAAQ,iCAAiC;AACzD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,cAAc,EACdC,aAAa,EACbC,aAAa,EACbC,mBAAmB,QACd,aAAa;AACpB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAO,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC5C,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjBA,QAAQ,CAACF,IAAI,CAAC,GAAGC,KAAK;EAEtB,OAAO;IACLE,IAAI,EAAEV,cAAc;IACpBW,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO;IACLF,IAAI,EAAER;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,iBAAiB,GAAGL,KAAK,IAAI;EACxC,OAAO;IACLE,IAAI,EAAEP,mBAAmB;IACzBQ,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMM,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAACF,iBAAiB,CAAC,IAAI,CAAC,CAAC;MACjC,MAAMI,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,GAAEb,OAAQ,UAAS,CAAC;MAEtDU,QAAQ,CAAC;QAAEL,IAAI,EAAET,aAAa;QAAEU,OAAO,EAAEM,QAAQ,CAACE,IAAI,CAACC;MAAK,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdjB,WAAW,CAACiB,KAAK,EAAEN,QAAQ,CAAC;IAC9B,CAAC,SAAS;MACRA,QAAQ,CAACF,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACpC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,OAAOP,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMO,OAAO,GAAGP,QAAQ,CAAC,CAAC,CAACQ,OAAO,CAACJ,IAAI;IAEvC,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMlB,KAAK,CAAC0B,GAAG,CAAE,GAAEpB,OAAQ,OAAM,EAAE;QAClDkB;MACF,CAAC,CAAC;MAEF,MAAMG,iBAAiB,GAAG;QACxBC,KAAK,EAAG,GAAEV,QAAQ,CAACE,IAAI,CAACS,OAAQ,EAAC;QACjCC,QAAQ,EAAE,IAAI;QACdC,WAAW,EAAE;MACf,CAAC;MAEDf,QAAQ,CAAC;QAAEL,IAAI,EAAET,aAAa;QAAEU,OAAO,EAAEM,QAAQ,CAACE,IAAI,CAACC;MAAK,CAAC,CAAC;MAE9DL,QAAQ,CAACjB,OAAO,CAAC4B,iBAAiB,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdjB,WAAW,CAACiB,KAAK,EAAEN,QAAQ,CAAC;IAC9B;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}