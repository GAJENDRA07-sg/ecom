{"ast":null,"code":"var _jsxFileName = \"D:\\\\origin tribe\\\\mern-ecommerce-master\\\\client\\\\src\\\\components\\\\Common\\\\ResetPasswordForm\\\\index.js\";\n/**\n *\n * ResetPasswordForm\n *\n */\n\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport Input from '../Input';\nimport Button from '../Button';\nconst ResetPasswordForm = props => {\n  const {\n    resetFormData,\n    formErrors,\n    isToken,\n    resetPasswordChange,\n    resetPassword\n  } = props;\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetPassword();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: 'password',\n    error: formErrors['password'],\n    label: 'Password',\n    name: 'password',\n    placeholder: isToken ? 'Password' : 'Old Password',\n    value: resetFormData.password,\n    onInputChange: (name, value) => {\n      resetPasswordChange(name, value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: 'password',\n    error: formErrors['confirmPassword'],\n    label: 'Confirm Password',\n    name: 'confirmPassword',\n    placeholder: 'Confirm Password',\n    value: resetFormData.confirmPassword,\n    onInputChange: (name, value) => {\n      resetPasswordChange(name, value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    text: \"Reset Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n};\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["React","Row","Col","Input","Button","ResetPasswordForm","props","resetFormData","formErrors","isToken","resetPasswordChange","resetPassword","handleSubmit","event","preventDefault","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","xs","lg","type","error","label","name","placeholder","value","password","onInputChange","confirmPassword","text","_c","$RefreshReg$"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/components/Common/ResetPasswordForm/index.js"],"sourcesContent":["/**\n *\n * ResetPasswordForm\n *\n */\n\nimport React from 'react';\n\nimport { Row, Col } from 'reactstrap';\n\nimport Input from '../Input';\nimport Button from '../Button';\n\nconst ResetPasswordForm = props => {\n  const {\n    resetFormData,\n    formErrors,\n    isToken,\n    resetPasswordChange,\n    resetPassword\n  } = props;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetPassword();\n  };\n\n  return (\n    <div className='reset-password-form'>\n      <form onSubmit={handleSubmit} noValidate>\n        <Row>\n          <Col xs='12' lg='6'>\n            <Input\n              type={'password'}\n              error={formErrors['password']}\n              label={'Password'}\n              name={'password'}\n              placeholder={isToken ? 'Password' : 'Old Password'}\n              value={resetFormData.password}\n              onInputChange={(name, value) => {\n                resetPasswordChange(name, value);\n              }}\n            />\n          </Col>\n          <Col xs='12' lg='6'>\n            <Input\n              type={'password'}\n              error={formErrors['confirmPassword']}\n              label={'Confirm Password'}\n              name={'confirmPassword'}\n              placeholder={'Confirm Password'}\n              value={resetFormData.confirmPassword}\n              onInputChange={(name, value) => {\n                resetPasswordChange(name, value);\n              }}\n            />\n          </Col>\n        </Row>\n        <hr />\n        <div className='reset-actions'>\n          <Button type='submit' text='Reset Password' />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}