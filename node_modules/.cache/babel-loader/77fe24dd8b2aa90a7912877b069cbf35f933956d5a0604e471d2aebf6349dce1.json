{"ast":null,"code":"/*\n *\n * Category reducer\n *\n */\n\nimport { FETCH_CATEGORIES, FETCH_STORE_CATEGORIES, FETCH_CATEGORY, CATEGORY_CHANGE, CATEGORY_EDIT_CHANGE, SET_CATEGORY_FORM_ERRORS, SET_CATEGORY_FORM_EDIT_ERRORS, ADD_CATEGORY, REMOVE_CATEGORY, SET_CATEGORIES_LOADING, RESET_CATEGORY } from './constants';\nconst initialState = {\n  categories: [],\n  storeCategories: [],\n  category: {\n    _id: ''\n  },\n  categoryFormData: {\n    name: '',\n    description: '',\n    products: [],\n    isActive: true\n  },\n  formErrors: {},\n  editFormErrors: {},\n  isLoading: false\n};\nconst categoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload\n      };\n    case FETCH_STORE_CATEGORIES:\n      return {\n        ...state,\n        storeCategories: action.payload\n      };\n    case FETCH_CATEGORY:\n      return {\n        ...state,\n        category: action.payload\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: [...state.categories, action.payload]\n      };\n    case REMOVE_CATEGORY:\n      const index = state.categories.findIndex(b => b._id === action.payload);\n      return {\n        ...state,\n        categories: [...state.categories.slice(0, index), ...state.categories.slice(index + 1)]\n      };\n    case CATEGORY_CHANGE:\n      return {\n        ...state,\n        categoryFormData: {\n          ...state.categoryFormData,\n          ...action.payload\n        }\n      };\n    case CATEGORY_EDIT_CHANGE:\n      return {\n        ...state,\n        category: {\n          ...state.category,\n          ...action.payload\n        }\n      };\n    case SET_CATEGORY_FORM_ERRORS:\n      return {\n        ...state,\n        formErrors: action.payload\n      };\n    case SET_CATEGORY_FORM_EDIT_ERRORS:\n      return {\n        ...state,\n        editFormErrors: action.payload\n      };\n    case SET_CATEGORIES_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case RESET_CATEGORY:\n      return {\n        ...state,\n        categoryFormData: {\n          name: '',\n          description: '',\n          products: [],\n          isActive: true\n        },\n        category: {\n          _id: ''\n        },\n        formErrors: {},\n        editFormErrors: {}\n      };\n    default:\n      return state;\n  }\n};\nexport default categoryReducer;","map":{"version":3,"names":["FETCH_CATEGORIES","FETCH_STORE_CATEGORIES","FETCH_CATEGORY","CATEGORY_CHANGE","CATEGORY_EDIT_CHANGE","SET_CATEGORY_FORM_ERRORS","SET_CATEGORY_FORM_EDIT_ERRORS","ADD_CATEGORY","REMOVE_CATEGORY","SET_CATEGORIES_LOADING","RESET_CATEGORY","initialState","categories","storeCategories","category","_id","categoryFormData","name","description","products","isActive","formErrors","editFormErrors","isLoading","categoryReducer","state","action","type","payload","index","findIndex","b","slice"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/Category/reducer.js"],"sourcesContent":["/*\n *\n * Category reducer\n *\n */\n\nimport {\n  FETCH_CATEGORIES,\n  FETCH_STORE_CATEGORIES,\n  FETCH_CATEGORY,\n  CATEGORY_CHANGE,\n  CATEGORY_EDIT_CHANGE,\n  SET_CATEGORY_FORM_ERRORS,\n  SET_CATEGORY_FORM_EDIT_ERRORS,\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_CATEGORIES_LOADING,\n  RESET_CATEGORY\n} from './constants';\n\nconst initialState = {\n  categories: [],\n  storeCategories: [],\n  category: {\n    _id: ''\n  },\n  categoryFormData: {\n    name: '',\n    description: '',\n    products: [],\n    isActive: true\n  },\n  formErrors: {},\n  editFormErrors: {},\n  isLoading: false\n};\n\nconst categoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload\n      };\n    case FETCH_STORE_CATEGORIES:\n      return {\n        ...state,\n        storeCategories: action.payload\n      };\n    case FETCH_CATEGORY:\n      return {\n        ...state,\n        category: action.payload\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: [...state.categories, action.payload]\n      };\n    case REMOVE_CATEGORY:\n      const index = state.categories.findIndex(b => b._id === action.payload);\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, index),\n          ...state.categories.slice(index + 1)\n        ]\n      };\n    case CATEGORY_CHANGE:\n      return {\n        ...state,\n        categoryFormData: { ...state.categoryFormData, ...action.payload }\n      };\n    case CATEGORY_EDIT_CHANGE:\n      return {\n        ...state,\n        category: {\n          ...state.category,\n          ...action.payload\n        }\n      };\n    case SET_CATEGORY_FORM_ERRORS:\n      return {\n        ...state,\n        formErrors: action.payload\n      };\n    case SET_CATEGORY_FORM_EDIT_ERRORS:\n      return {\n        ...state,\n        editFormErrors: action.payload\n      };\n    case SET_CATEGORIES_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case RESET_CATEGORY:\n      return {\n        ...state,\n        categoryFormData: {\n          name: '',\n          description: '',\n          products: [],\n          isActive: true\n        },\n        category: {\n          _id: ''\n        },\n        formErrors: {},\n        editFormErrors: {}\n      };\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}