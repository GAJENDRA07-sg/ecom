{"ast":null,"code":"var _jsxFileName = \"D:\\\\origin tribe\\\\mern-ecommerce-master\\\\client\\\\src\\\\containers\\\\ResetPassword\\\\index.js\";\n/*\n *\n * ResetPassword\n *\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport actions from '../../actions';\nimport ResetPasswordForm from '../../components/Common/ResetPasswordForm';\nclass ResetPassword extends React.PureComponent {\n  handleResetPassword() {\n    const token = this.props.match.params.token;\n    this.props.resetPassword(token);\n  }\n  render() {\n    const {\n      authenticated,\n      resetFormData,\n      formErrors,\n      resetPasswordChange\n    } = this.props;\n    if (authenticated) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reset-password-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ResetPasswordForm, {\n      isToken: true,\n      resetFormData: resetFormData,\n      formErrors: formErrors,\n      resetPasswordChange: resetPasswordChange,\n      resetPassword: () => this.handleResetPassword(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.authentication.authenticated,\n    resetFormData: state.resetPassword.resetFormData,\n    formErrors: state.resetPassword.formErrors\n  };\n};\nexport default connect(mapStateToProps, actions)(ResetPassword);","map":{"version":3,"names":["React","connect","Redirect","actions","ResetPasswordForm","ResetPassword","PureComponent","handleResetPassword","token","props","match","params","resetPassword","render","authenticated","resetFormData","formErrors","resetPasswordChange","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","isToken","mapStateToProps","state","authentication"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/ResetPassword/index.js"],"sourcesContent":["/*\n *\n * ResetPassword\n *\n */\n\nimport React from 'react';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport actions from '../../actions';\nimport ResetPasswordForm from '../../components/Common/ResetPasswordForm';\n\nclass ResetPassword extends React.PureComponent {\n  handleResetPassword() {\n    const token = this.props.match.params.token;\n    this.props.resetPassword(token);\n  }\n\n  render() {\n    const { authenticated, resetFormData, formErrors, resetPasswordChange } =\n      this.props;\n\n    if (authenticated) return <Redirect to='/dashboard' />;\n\n    return (\n      <div className='reset-password-form'>\n        <h2>Reset Password</h2>\n        <hr />\n        <ResetPasswordForm\n          isToken\n          resetFormData={resetFormData}\n          formErrors={formErrors}\n          resetPasswordChange={resetPasswordChange}\n          resetPassword={() => this.handleResetPassword()}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.authentication.authenticated,\n    resetFormData: state.resetPassword.resetFormData,\n    formErrors: state.resetPassword.formErrors\n  };\n};\n\nexport default connect(mapStateToProps, actions)(ResetPassword);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,iBAAiB,MAAM,2CAA2C;AAEzE,MAAMC,aAAa,SAASL,KAAK,CAACM,aAAa,CAAC;EAC9CC,mBAAmBA,CAAA,EAAG;IACpB,MAAMC,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACH,KAAK;IAC3C,IAAI,CAACC,KAAK,CAACG,aAAa,CAACJ,KAAK,CAAC;EACjC;EAEAK,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,aAAa;MAAEC,aAAa;MAAEC,UAAU;MAAEC;IAAoB,CAAC,GACrE,IAAI,CAACR,KAAK;IAEZ,IAAIK,aAAa,EAAE,oBAAOd,KAAA,CAAAkB,aAAA,CAAChB,QAAQ;MAACiB,EAAE,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;IAEtD,oBACEzB,KAAA,CAAAkB,aAAA;MAAKQ,SAAS,EAAC,qBAAqB;MAAAN,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCzB,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,gBAAkB,CAAC,eACvBzB,KAAA,CAAAkB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAK,CAAC,eACNzB,KAAA,CAAAkB,aAAA,CAACd,iBAAiB;MAChBuB,OAAO;MACPZ,aAAa,EAAEA,aAAc;MAC7BC,UAAU,EAAEA,UAAW;MACvBC,mBAAmB,EAAEA,mBAAoB;MACzCL,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACL,mBAAmB,CAAC,CAAE;MAAAa,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACjD,CACE,CAAC;EAEV;AACF;AAEA,MAAMG,eAAe,GAAGC,KAAK,IAAI;EAC/B,OAAO;IACLf,aAAa,EAAEe,KAAK,CAACC,cAAc,CAAChB,aAAa;IACjDC,aAAa,EAAEc,KAAK,CAACjB,aAAa,CAACG,aAAa;IAChDC,UAAU,EAAEa,KAAK,CAACjB,aAAa,CAACI;EAClC,CAAC;AACH,CAAC;AAED,eAAef,OAAO,CAAC2B,eAAe,EAAEzB,OAAO,CAAC,CAACE,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}