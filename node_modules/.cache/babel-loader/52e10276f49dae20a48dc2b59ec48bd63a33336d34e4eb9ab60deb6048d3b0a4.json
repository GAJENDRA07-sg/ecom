{"ast":null,"code":"/*\n *\n * Order reducer\n *\n */\n\nimport { FETCH_ORDERS, FETCH_SEARCHED_ORDERS, FETCH_ORDER, UPDATE_ORDER_STATUS, SET_ORDERS_LOADING, SET_ADVANCED_FILTERS, CLEAR_ORDERS } from './constants';\nconst initialState = {\n  orders: [],\n  searchedOrders: [],\n  order: {\n    _id: '',\n    cartId: '',\n    products: [],\n    totalTax: 0,\n    total: 0,\n    status: ''\n  },\n  isLoading: false,\n  advancedFilters: {\n    totalPages: 1,\n    currentPage: 1,\n    count: 0\n  }\n};\nconst orderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ORDERS:\n      return {\n        ...state,\n        orders: action.payload\n      };\n    case FETCH_SEARCHED_ORDERS:\n      return {\n        ...state,\n        searchedOrders: action.payload\n      };\n    case FETCH_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    case SET_ADVANCED_FILTERS:\n      return {\n        ...state,\n        advancedFilters: {\n          ...state.advancedFilters,\n          ...action.payload\n        }\n      };\n    case UPDATE_ORDER_STATUS:\n      const itemIndex = state.order.products.findIndex(item => item._id === action.payload.itemId);\n      const newProducts = [...state.order.products];\n      newProducts[itemIndex].status = action.payload.status;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          products: newProducts\n        }\n      };\n    case SET_ORDERS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case CLEAR_ORDERS:\n      return {\n        ...state,\n        orders: []\n      };\n    default:\n      return state;\n  }\n};\nexport default orderReducer;","map":{"version":3,"names":["FETCH_ORDERS","FETCH_SEARCHED_ORDERS","FETCH_ORDER","UPDATE_ORDER_STATUS","SET_ORDERS_LOADING","SET_ADVANCED_FILTERS","CLEAR_ORDERS","initialState","orders","searchedOrders","order","_id","cartId","products","totalTax","total","status","isLoading","advancedFilters","totalPages","currentPage","count","orderReducer","state","action","type","payload","itemIndex","findIndex","item","itemId","newProducts"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/Order/reducer.js"],"sourcesContent":["/*\n *\n * Order reducer\n *\n */\n\nimport {\n  FETCH_ORDERS,\n  FETCH_SEARCHED_ORDERS,\n  FETCH_ORDER,\n  UPDATE_ORDER_STATUS,\n  SET_ORDERS_LOADING,\n  SET_ADVANCED_FILTERS,\n  CLEAR_ORDERS\n} from './constants';\n\nconst initialState = {\n  orders: [],\n  searchedOrders: [],\n  order: {\n    _id: '',\n    cartId: '',\n    products: [],\n    totalTax: 0,\n    total: 0,\n    status: ''\n  },\n  isLoading: false,\n  advancedFilters: {\n    totalPages: 1,\n    currentPage: 1,\n    count: 0\n  }\n};\n\nconst orderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ORDERS:\n      return {\n        ...state,\n        orders: action.payload\n      };\n    case FETCH_SEARCHED_ORDERS:\n      return {\n        ...state,\n        searchedOrders: action.payload\n      };\n    case FETCH_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    case SET_ADVANCED_FILTERS:\n      return {\n        ...state,\n        advancedFilters: {\n          ...state.advancedFilters,\n          ...action.payload\n        }\n      };\n    case UPDATE_ORDER_STATUS:\n      const itemIndex = state.order.products.findIndex(\n        item => item._id === action.payload.itemId\n      );\n\n      const newProducts = [...state.order.products];\n      newProducts[itemIndex].status = action.payload.status;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          products: newProducts\n        }\n      };\n    case SET_ORDERS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case CLEAR_ORDERS:\n      return {\n        ...state,\n        orders: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SACEA,YAAY,EACZC,qBAAqB,EACrBC,WAAW,EACXC,mBAAmB,EACnBC,kBAAkB,EAClBC,oBAAoB,EACpBC,YAAY,QACP,aAAa;AAEpB,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,cAAc,EAAE,EAAE;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,SAAS,EAAE,KAAK;EAChBC,eAAe,EAAE;IACfC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IACdC,KAAK,EAAE;EACT;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKzB,YAAY;MACf,OAAO;QACL,GAAGuB,KAAK;QACRf,MAAM,EAAEgB,MAAM,CAACE;MACjB,CAAC;IACH,KAAKzB,qBAAqB;MACxB,OAAO;QACL,GAAGsB,KAAK;QACRd,cAAc,EAAEe,MAAM,CAACE;MACzB,CAAC;IACH,KAAKxB,WAAW;MACd,OAAO;QACL,GAAGqB,KAAK;QACRb,KAAK,EAAEc,MAAM,CAACE;MAChB,CAAC;IACH,KAAKrB,oBAAoB;MACvB,OAAO;QACL,GAAGkB,KAAK;QACRL,eAAe,EAAE;UACf,GAAGK,KAAK,CAACL,eAAe;UACxB,GAAGM,MAAM,CAACE;QACZ;MACF,CAAC;IACH,KAAKvB,mBAAmB;MACtB,MAAMwB,SAAS,GAAGJ,KAAK,CAACb,KAAK,CAACG,QAAQ,CAACe,SAAS,CAC9CC,IAAI,IAAIA,IAAI,CAAClB,GAAG,KAAKa,MAAM,CAACE,OAAO,CAACI,MACtC,CAAC;MAED,MAAMC,WAAW,GAAG,CAAC,GAAGR,KAAK,CAACb,KAAK,CAACG,QAAQ,CAAC;MAC7CkB,WAAW,CAACJ,SAAS,CAAC,CAACX,MAAM,GAAGQ,MAAM,CAACE,OAAO,CAACV,MAAM;MACrD,OAAO;QACL,GAAGO,KAAK;QACRb,KAAK,EAAE;UACL,GAAGa,KAAK,CAACb,KAAK;UACdG,QAAQ,EAAEkB;QACZ;MACF,CAAC;IACH,KAAK3B,kBAAkB;MACrB,OAAO;QACL,GAAGmB,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACpB,CAAC;IACH,KAAKpB,YAAY;MACf,OAAO;QACL,GAAGiB,KAAK;QACRf,MAAM,EAAE;MACV,CAAC;IACH;MACE,OAAOe,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}