{"ast":null,"code":"/**\n *\n * store.js\n * store configuration\n */\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport createReducer from './reducers';\nexport const history = createBrowserHistory({\n  basename: '/',\n  hashType: 'noslash'\n});\nconst middlewares = [thunk, routerMiddleware(history)];\nconst enhancers = [applyMiddleware(...middlewares)];\n\n// If Redux DevTools Extension is installed use it, otherwise use Redux compose\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst store = createStore(createReducer(history), composeEnhancers(...enhancers));\nif (module.hot) {\n  // Enable Webpack hot module replacement for reducers\n  module.hot.accept('./reducers', () => {\n    const nextRootReducer = require('./reducers').default; // eslint-disable-line global-require\n    store.replaceReducer(nextRootReducer(history));\n  });\n}\nexport default store;","map":{"version":3,"names":["createStore","compose","applyMiddleware","thunk","routerMiddleware","createBrowserHistory","createReducer","history","basename","hashType","middlewares","enhancers","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","module","hot","accept","nextRootReducer","require","default","replaceReducer"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/store.js"],"sourcesContent":["/**\n *\n * store.js\n * store configuration\n */\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport createReducer from './reducers';\n\nexport const history = createBrowserHistory({\n  basename: '/',\n  hashType: 'noslash'\n});\n\nconst middlewares = [thunk, routerMiddleware(history)];\n\nconst enhancers = [applyMiddleware(...middlewares)];\n\n// If Redux DevTools Extension is installed use it, otherwise use Redux compose\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  createReducer(history),\n  composeEnhancers(...enhancers)\n);\n\nif (module.hot) {\n  // Enable Webpack hot module replacement for reducers\n  module.hot.accept('./reducers', () => {\n    const nextRootReducer = require('./reducers').default; // eslint-disable-line global-require\n    store.replaceReducer(nextRootReducer(history));\n  });\n}\n\nexport default store;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,oBAAoB,QAAQ,SAAS;AAE9C,OAAOC,aAAa,MAAM,YAAY;AAEtC,OAAO,MAAMC,OAAO,GAAGF,oBAAoB,CAAC;EAC1CG,QAAQ,EAAE,GAAG;EACbC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,CAACP,KAAK,EAAEC,gBAAgB,CAACG,OAAO,CAAC,CAAC;AAEtD,MAAMI,SAAS,GAAG,CAACT,eAAe,CAAC,GAAGQ,WAAW,CAAC,CAAC;;AAEnD;AACA,MAAME,gBAAgB,GACpBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACrC,OAAOC,MAAM,KAAK,QAAQ,IAC1BA,MAAM,CAACC,oCAAoC,GACvCD,MAAM,CAACC,oCAAoC,CAAC,CAAC,CAAC,CAAC,GAC/ChB,OAAO;AAEb,MAAMiB,KAAK,GAAGlB,WAAW,CACvBM,aAAa,CAACC,OAAO,CAAC,EACtBK,gBAAgB,CAAC,GAAGD,SAAS,CAC/B,CAAC;AAED,IAAIQ,MAAM,CAACC,GAAG,EAAE;EACd;EACAD,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,YAAY,EAAE,MAAM;IACpC,MAAMC,eAAe,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC;IACvDN,KAAK,CAACO,cAAc,CAACH,eAAe,CAACf,OAAO,CAAC,CAAC;EAChD,CAAC,CAAC;AACJ;AAEA,eAAeW,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}