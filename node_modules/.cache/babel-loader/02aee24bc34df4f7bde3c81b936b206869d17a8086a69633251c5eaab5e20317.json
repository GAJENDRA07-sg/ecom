{"ast":null,"code":"var _jsxFileName = \"D:\\\\origin tribe\\\\mern-ecommerce-master\\\\client\\\\src\\\\components\\\\Manager\\\\Support\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { useSocket } from '../../../contexts/Socket';\nimport AddMessage from './AddMessage';\nimport MessageList from './MessageList';\nimport UserList from './UserList';\nimport NotFound from '../../Common/NotFound';\nconst Support = props => {\n  _s();\n  const {\n    user: me\n  } = props;\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [activeChat, setActiveChat] = useState([]);\n  const {\n    socket,\n    connect,\n    disconnect\n  } = useSocket();\n  useEffect(() => {\n    connect();\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.emit('connectUser');\n      socket.emit('getUsers');\n      socket.emit('getMessages');\n      socket.on('getUsers', users => {\n        setUsers(users);\n      });\n      socket.on('getMessages', msgs => {\n        setMessages(prevState => [...prevState, ...msgs]);\n      });\n      socket.on('message', onMessage);\n    }\n    return () => {\n      disconnect();\n    };\n  }, [socket]);\n\n  /* user connect/disconnect implementation */\n  useEffect(() => {\n    if (socket && users) {\n      socket.on('connectUser', user => {\n        const index = users.findIndex(u => u.id === user.id);\n        let newUsers = [...users];\n        if (index !== -1) {\n          newUsers[index] = user;\n        } else {\n          newUsers = [...newUsers, user];\n        }\n        setUsers(newUsers);\n      });\n      socket.on('disconnectUser', user => {\n        const index = users.findIndex(u => u.id === user.id);\n        const newUsers = [...users];\n        if (index !== -1) {\n          newUsers[index] = user;\n        }\n        setUsers(newUsers);\n      });\n    }\n  }, [socket, users]);\n  useEffect(() => {\n    if (messages.length > 0) {\n      if (selectedUser) {\n        selectUser(selectedUser);\n      } else {\n        const user_id = localStorage.getItem('selected_suport_chat');\n        if (user_id) {\n          const user = users.find(u => u.id === user_id);\n          if (user) selectUser(user);\n        }\n      }\n    }\n  }, [messages]);\n  const onMessage = message => {\n    setMessages(prevState => [...prevState, message]);\n  };\n  const selectUser = user => {\n    setSelectedUser(user);\n    const msgs = getUserMsgs(user);\n    setActiveChat(msgs);\n    localStorage.setItem('selected_suport_chat', user.id);\n  };\n  const getUserMsgs = user => {\n    const sentMsgs = messages.filter(m => m.from === user.id);\n    const receivedMsgs = messages.filter(m => m.to === user.id);\n    const msgs = [...sentMsgs, ...receivedMsgs].sort((a, b) => a.time - b.time);\n    const updatedMsgs = [];\n    for (let i = 0; i < msgs.length; i++) {\n      const previousMsg = msgs[i - 1];\n      const currentMsg = msgs[i];\n      if (previousMsg && previousMsg.from === currentMsg.from && i !== 0) {\n        currentMsg.noHeader = true;\n      } else {\n        currentMsg.noHeader = false;\n      }\n      updatedMsgs.push(currentMsg);\n    }\n    return updatedMsgs;\n  };\n  const onMessageSubmit = message => {\n    if (!selectedUser) return;\n    socket.emit('message', {\n      text: message,\n      to: selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, socket ? /*#__PURE__*/React.createElement(React.Fragment, null, users.length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    md: \"4\",\n    xl: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserList, {\n    users: users,\n    selectedUser: selectedUser,\n    selectUser: selectUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    md: \"8\",\n    xl: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, selectedUser ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center text-md-left mt-3 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name), /*#__PURE__*/React.createElement(MessageList, {\n    user: me,\n    messages: activeChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(AddMessage, {\n    socket: socket,\n    onSubmit: onMessageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column justify-content-center h-100 p-4 p-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NotFound, {\n    message: \"Select chat to start messaging\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  })))) : /*#__PURE__*/React.createElement(NotFound, {\n    message: \"No users connected.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(NotFound, {\n    message: \"Not connected.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }));\n};\n_s(Support, \"hCec7b5OtsEcz5MBJ/Wqzhs2RFo=\", false, function () {\n  return [useSocket];\n});\n_c = Support;\nexport default Support;\nvar _c;\n$RefreshReg$(_c, \"Support\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","useSocket","AddMessage","MessageList","UserList","NotFound","Support","props","_s","user","me","messages","setMessages","users","setUsers","selectedUser","setSelectedUser","activeChat","setActiveChat","socket","connect","disconnect","emit","on","msgs","prevState","onMessage","index","findIndex","u","id","newUsers","length","selectUser","user_id","localStorage","getItem","find","message","getUserMsgs","setItem","sentMsgs","filter","m","from","receivedMsgs","to","sort","a","b","time","updatedMsgs","i","previousMsg","currentMsg","noHeader","push","onMessageSubmit","text","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","xl","className","name","onSubmit","_c","$RefreshReg$"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/components/Manager/Support/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nimport { useSocket } from '../../../contexts/Socket';\nimport AddMessage from './AddMessage';\nimport MessageList from './MessageList';\nimport UserList from './UserList';\nimport NotFound from '../../Common/NotFound';\n\nconst Support = props => {\n  const { user: me } = props;\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [activeChat, setActiveChat] = useState([]);\n  const { socket, connect, disconnect } = useSocket();\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.emit('connectUser');\n      socket.emit('getUsers');\n      socket.emit('getMessages');\n      socket.on('getUsers', users => {\n        setUsers(users);\n      });\n      socket.on('getMessages', msgs => {\n        setMessages(prevState => [...prevState, ...msgs]);\n      });\n      socket.on('message', onMessage);\n    }\n\n    return () => {\n      disconnect();\n    };\n  }, [socket]);\n\n  /* user connect/disconnect implementation */\n  useEffect(() => {\n    if (socket && users) {\n      socket.on('connectUser', user => {\n        const index = users.findIndex(u => u.id === user.id);\n        let newUsers = [...users];\n        if (index !== -1) {\n          newUsers[index] = user;\n        } else {\n          newUsers = [...newUsers, user];\n        }\n        setUsers(newUsers);\n      });\n\n      socket.on('disconnectUser', user => {\n        const index = users.findIndex(u => u.id === user.id);\n        const newUsers = [...users];\n        if (index !== -1) {\n          newUsers[index] = user;\n        }\n        setUsers(newUsers);\n      });\n    }\n  }, [socket, users]);\n\n  useEffect(() => {\n    if (messages.length > 0) {\n      if (selectedUser) {\n        selectUser(selectedUser);\n      } else {\n        const user_id = localStorage.getItem('selected_suport_chat');\n        if (user_id) {\n          const user = users.find(u => u.id === user_id);\n          if (user) selectUser(user);\n        }\n      }\n    }\n  }, [messages]);\n\n  const onMessage = message => {\n    setMessages(prevState => [...prevState, message]);\n  };\n\n  const selectUser = user => {\n    setSelectedUser(user);\n    const msgs = getUserMsgs(user);\n    setActiveChat(msgs);\n    localStorage.setItem('selected_suport_chat', user.id);\n  };\n\n  const getUserMsgs = user => {\n    const sentMsgs = messages.filter(m => m.from === user.id);\n    const receivedMsgs = messages.filter(m => m.to === user.id);\n    const msgs = [...sentMsgs, ...receivedMsgs].sort((a, b) => a.time - b.time);\n    const updatedMsgs = [];\n    for (let i = 0; i < msgs.length; i++) {\n      const previousMsg = msgs[i - 1];\n      const currentMsg = msgs[i];\n      if (previousMsg && previousMsg.from === currentMsg.from && i !== 0) {\n        currentMsg.noHeader = true;\n      } else {\n        currentMsg.noHeader = false;\n      }\n      updatedMsgs.push(currentMsg);\n    }\n    return updatedMsgs;\n  };\n\n  const onMessageSubmit = message => {\n    if (!selectedUser) return;\n    socket.emit('message', {\n      text: message,\n      to: selectedUser?.id\n    });\n  };\n\n  return (\n    <>\n      {socket ? (\n        <>\n          {users.length > 0 ? (\n            <Row>\n              <Col xs='12' md='4' xl='3'>\n                <UserList\n                  users={users}\n                  selectedUser={selectedUser}\n                  selectUser={selectUser}\n                />\n              </Col>\n              <Col xs='12' md='8' xl='9'>\n                {selectedUser ? (\n                  <div>\n                    <h4 className='text-center text-md-left mt-3 mt-md-0'>\n                      {selectedUser?.name}\n                    </h4>\n                    <MessageList user={me} messages={activeChat} />\n                    <AddMessage socket={socket} onSubmit={onMessageSubmit} />\n                  </div>\n                ) : (\n                  <div className='d-flex flex-column justify-content-center h-100 p-4 p-md-0'>\n                    <NotFound message='Select chat to start messaging' />\n                  </div>\n                )}\n              </Col>\n            </Row>\n          ) : (\n            <NotFound message='No users connected.' />\n          )}\n        </>\n      ) : (\n        <NotFound message='Not connected.' />\n      )}\n    </>\n  );\n};\n\nexport default Support;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}