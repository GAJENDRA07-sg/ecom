{"ast":null,"code":"/*\n *\n * Login actions\n *\n */\n\nimport { success } from 'react-notification-system-redux';\nimport axios from 'axios';\nimport { push } from 'connected-react-router';\nimport { LOGIN_CHANGE, LOGIN_RESET, SET_LOGIN_LOADING, SET_LOGIN_FORM_ERRORS, SET_LOGIN_SUBMITTING } from './constants';\nimport { setAuth, clearAuth } from '../Authentication/actions';\nimport setToken from '../../utils/token';\nimport handleError from '../../utils/error';\nimport { clearCart } from '../Cart/actions';\nimport { clearAccount } from '../Account/actions';\nimport { allFieldsValidation } from '../../utils/validation';\nimport { API_URL } from '../../constants';\nexport const loginChange = (name, value) => {\n  let formData = {};\n  formData[name] = value;\n  return {\n    type: LOGIN_CHANGE,\n    payload: formData\n  };\n};\nexport const login = () => {\n  return async (dispatch, getState) => {\n    const rules = {\n      email: 'required|email',\n      password: 'required|min:6'\n    };\n    const user = getState().login.loginFormData;\n    const {\n      isValid,\n      errors\n    } = allFieldsValidation(user, rules, {\n      'required.email': 'Email is required.',\n      'email.email': 'Email format is invalid.',\n      'required.password': 'Password is required.',\n      'min.password': 'Password must be at least 6 characters.'\n    });\n    if (!isValid) {\n      return dispatch({\n        type: SET_LOGIN_FORM_ERRORS,\n        payload: errors\n      });\n    }\n    dispatch({\n      type: SET_LOGIN_SUBMITTING,\n      payload: true\n    });\n    dispatch({\n      type: SET_LOGIN_LOADING,\n      payload: true\n    });\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, user);\n      const firstName = response.data.user.firstName;\n      const successfulOptions = {\n        title: `Hey${firstName ? ` ${firstName}` : ''}, Welcome Back!`,\n        position: 'tr',\n        autoDismiss: 1\n      };\n      localStorage.setItem('token', response.data.token);\n      setToken(response.data.token);\n      dispatch(setAuth());\n      dispatch(success(successfulOptions));\n      dispatch({\n        type: LOGIN_RESET\n      });\n    } catch (error) {\n      const title = `Please try to login again!`;\n      handleError(error, dispatch, title);\n    } finally {\n      dispatch({\n        type: SET_LOGIN_SUBMITTING,\n        payload: false\n      });\n      dispatch({\n        type: SET_LOGIN_LOADING,\n        payload: false\n      });\n    }\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState) => {\n    const successfulOptions = {\n      title: `You have signed out!`,\n      position: 'tr',\n      autoDismiss: 1\n    };\n    dispatch(clearAuth());\n    dispatch(clearAccount());\n    dispatch(push('/login'));\n    localStorage.removeItem('token');\n    dispatch(success(successfulOptions));\n    // dispatch(clearCart());\n  };\n};","map":{"version":3,"names":["success","axios","push","LOGIN_CHANGE","LOGIN_RESET","SET_LOGIN_LOADING","SET_LOGIN_FORM_ERRORS","SET_LOGIN_SUBMITTING","setAuth","clearAuth","setToken","handleError","clearCart","clearAccount","allFieldsValidation","API_URL","loginChange","name","value","formData","type","payload","login","dispatch","getState","rules","email","password","user","loginFormData","isValid","errors","response","post","firstName","data","successfulOptions","title","position","autoDismiss","localStorage","setItem","token","error","signOut","removeItem"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/Login/actions.js"],"sourcesContent":["/*\n *\n * Login actions\n *\n */\n\nimport { success } from 'react-notification-system-redux';\nimport axios from 'axios';\nimport { push } from 'connected-react-router';\n\nimport {\n  LOGIN_CHANGE,\n  LOGIN_RESET,\n  SET_LOGIN_LOADING,\n  SET_LOGIN_FORM_ERRORS,\n  SET_LOGIN_SUBMITTING\n} from './constants';\nimport { setAuth, clearAuth } from '../Authentication/actions';\nimport setToken from '../../utils/token';\nimport handleError from '../../utils/error';\nimport { clearCart } from '../Cart/actions';\nimport { clearAccount } from '../Account/actions';\nimport { allFieldsValidation } from '../../utils/validation';\nimport { API_URL } from '../../constants';\n\nexport const loginChange = (name, value) => {\n  let formData = {};\n  formData[name] = value;\n\n  return {\n    type: LOGIN_CHANGE,\n    payload: formData\n  };\n};\n\nexport const login = () => {\n  return async (dispatch, getState) => {\n    const rules = {\n      email: 'required|email',\n      password: 'required|min:6'\n    };\n\n    const user = getState().login.loginFormData;\n\n    const { isValid, errors } = allFieldsValidation(user, rules, {\n      'required.email': 'Email is required.',\n      'email.email': 'Email format is invalid.',\n      'required.password': 'Password is required.',\n      'min.password': 'Password must be at least 6 characters.'\n    });\n\n    if (!isValid) {\n      return dispatch({ type: SET_LOGIN_FORM_ERRORS, payload: errors });\n    }\n\n    dispatch({ type: SET_LOGIN_SUBMITTING, payload: true });\n    dispatch({ type: SET_LOGIN_LOADING, payload: true });\n\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, user);\n\n      const firstName = response.data.user.firstName;\n\n      const successfulOptions = {\n        title: `Hey${firstName ? ` ${firstName}` : ''}, Welcome Back!`,\n        position: 'tr',\n        autoDismiss: 1\n      };\n\n      localStorage.setItem('token', response.data.token);\n\n      setToken(response.data.token);\n\n      dispatch(setAuth());\n      dispatch(success(successfulOptions));\n\n      dispatch({ type: LOGIN_RESET });\n    } catch (error) {\n      const title = `Please try to login again!`;\n      handleError(error, dispatch, title);\n    } finally {\n      dispatch({ type: SET_LOGIN_SUBMITTING, payload: false });\n      dispatch({ type: SET_LOGIN_LOADING, payload: false });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState) => {\n    const successfulOptions = {\n      title: `You have signed out!`,\n      position: 'tr',\n      autoDismiss: 1\n    };\n\n    dispatch(clearAuth());\n    dispatch(clearAccount());\n    dispatch(push('/login'));\n\n    localStorage.removeItem('token');\n\n    dispatch(success(successfulOptions));\n    // dispatch(clearCart());\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,QAAQ,iCAAiC;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,wBAAwB;AAE7C,SACEC,YAAY,EACZC,WAAW,EACXC,iBAAiB,EACjBC,qBAAqB,EACrBC,oBAAoB,QACf,aAAa;AACpB,SAASC,OAAO,EAAEC,SAAS,QAAQ,2BAA2B;AAC9D,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC1C,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjBA,QAAQ,CAACF,IAAI,CAAC,GAAGC,KAAK;EAEtB,OAAO;IACLE,IAAI,EAAEjB,YAAY;IAClBkB,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,KAAK,GAAGA,CAAA,KAAM;EACzB,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMC,KAAK,GAAG;MACZC,KAAK,EAAE,gBAAgB;MACvBC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,IAAI,GAAGJ,QAAQ,CAAC,CAAC,CAACF,KAAK,CAACO,aAAa;IAE3C,MAAM;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAGjB,mBAAmB,CAACc,IAAI,EAAEH,KAAK,EAAE;MAC3D,gBAAgB,EAAE,oBAAoB;MACtC,aAAa,EAAE,0BAA0B;MACzC,mBAAmB,EAAE,uBAAuB;MAC5C,cAAc,EAAE;IAClB,CAAC,CAAC;IAEF,IAAI,CAACK,OAAO,EAAE;MACZ,OAAOP,QAAQ,CAAC;QAAEH,IAAI,EAAEd,qBAAqB;QAAEe,OAAO,EAAEU;MAAO,CAAC,CAAC;IACnE;IAEAR,QAAQ,CAAC;MAAEH,IAAI,EAAEb,oBAAoB;MAAEc,OAAO,EAAE;IAAK,CAAC,CAAC;IACvDE,QAAQ,CAAC;MAAEH,IAAI,EAAEf,iBAAiB;MAAEgB,OAAO,EAAE;IAAK,CAAC,CAAC;IAEpD,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAAE,GAAElB,OAAQ,aAAY,EAAEa,IAAI,CAAC;MAEhE,MAAMM,SAAS,GAAGF,QAAQ,CAACG,IAAI,CAACP,IAAI,CAACM,SAAS;MAE9C,MAAME,iBAAiB,GAAG;QACxBC,KAAK,EAAG,MAAKH,SAAS,GAAI,IAAGA,SAAU,EAAC,GAAG,EAAG,iBAAgB;QAC9DI,QAAQ,EAAE,IAAI;QACdC,WAAW,EAAE;MACf,CAAC;MAEDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,QAAQ,CAACG,IAAI,CAACO,KAAK,CAAC;MAElDhC,QAAQ,CAACsB,QAAQ,CAACG,IAAI,CAACO,KAAK,CAAC;MAE7BnB,QAAQ,CAACf,OAAO,CAAC,CAAC,CAAC;MACnBe,QAAQ,CAACvB,OAAO,CAACoC,iBAAiB,CAAC,CAAC;MAEpCb,QAAQ,CAAC;QAAEH,IAAI,EAAEhB;MAAY,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACd,MAAMN,KAAK,GAAI,4BAA2B;MAC1C1B,WAAW,CAACgC,KAAK,EAAEpB,QAAQ,EAAEc,KAAK,CAAC;IACrC,CAAC,SAAS;MACRd,QAAQ,CAAC;QAAEH,IAAI,EAAEb,oBAAoB;QAAEc,OAAO,EAAE;MAAM,CAAC,CAAC;MACxDE,QAAQ,CAAC;QAAEH,IAAI,EAAEf,iBAAiB;QAAEgB,OAAO,EAAE;MAAM,CAAC,CAAC;IACvD;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMuB,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAO,CAACrB,QAAQ,EAAEC,QAAQ,KAAK;IAC7B,MAAMY,iBAAiB,GAAG;MACxBC,KAAK,EAAG,sBAAqB;MAC7BC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE;IACf,CAAC;IAEDhB,QAAQ,CAACd,SAAS,CAAC,CAAC,CAAC;IACrBc,QAAQ,CAACV,YAAY,CAAC,CAAC,CAAC;IACxBU,QAAQ,CAACrB,IAAI,CAAC,QAAQ,CAAC,CAAC;IAExBsC,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAEhCtB,QAAQ,CAACvB,OAAO,CAACoC,iBAAiB,CAAC,CAAC;IACpC;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}