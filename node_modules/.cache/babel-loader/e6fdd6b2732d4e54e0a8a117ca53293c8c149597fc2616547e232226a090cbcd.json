{"ast":null,"code":"/*\n *\n * Newsletter actions\n *\n */\n\nimport { success } from 'react-notification-system-redux';\nimport axios from 'axios';\nimport { NEWSLETTER_CHANGE, SET_NEWSLETTER_FORM_ERRORS, NEWSLETTER_RESET } from './constants';\nimport handleError from '../../utils/error';\nimport { allFieldsValidation } from '../../utils/validation';\nimport { API_URL } from '../../constants';\nexport const newsletterChange = (name, value) => {\n  return {\n    type: NEWSLETTER_CHANGE,\n    payload: value\n  };\n};\nexport const subscribeToNewsletter = () => {\n  return async (dispatch, getState) => {\n    try {\n      const rules = {\n        email: 'required|email'\n      };\n      const user = {};\n      user.email = getState().newsletter.email;\n      const {\n        isValid,\n        errors\n      } = allFieldsValidation(user, rules, {\n        'required.email': 'Email is required.',\n        'email.email': 'Email format is invalid.'\n      });\n      if (!isValid) {\n        return dispatch({\n          type: SET_NEWSLETTER_FORM_ERRORS,\n          payload: errors\n        });\n      }\n      const response = await axios.post(`${API_URL}/newsletter/subscribe`, user);\n      const successfulOptions = {\n        title: `${response.data.message}`,\n        position: 'tr',\n        autoDismiss: 1\n      };\n      dispatch({\n        type: NEWSLETTER_RESET\n      });\n      dispatch(success(successfulOptions));\n    } catch (error) {\n      handleError(error, dispatch);\n    }\n  };\n};","map":{"version":3,"names":["success","axios","NEWSLETTER_CHANGE","SET_NEWSLETTER_FORM_ERRORS","NEWSLETTER_RESET","handleError","allFieldsValidation","API_URL","newsletterChange","name","value","type","payload","subscribeToNewsletter","dispatch","getState","rules","email","user","newsletter","isValid","errors","response","post","successfulOptions","title","data","message","position","autoDismiss","error"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/Newsletter/actions.js"],"sourcesContent":["/*\n *\n * Newsletter actions\n *\n */\n\nimport { success } from 'react-notification-system-redux';\nimport axios from 'axios';\n\nimport {\n  NEWSLETTER_CHANGE,\n  SET_NEWSLETTER_FORM_ERRORS,\n  NEWSLETTER_RESET\n} from './constants';\nimport handleError from '../../utils/error';\nimport { allFieldsValidation } from '../../utils/validation';\nimport { API_URL } from '../../constants';\n\nexport const newsletterChange = (name, value) => {\n  return {\n    type: NEWSLETTER_CHANGE,\n    payload: value\n  };\n};\n\nexport const subscribeToNewsletter = () => {\n  return async (dispatch, getState) => {\n    try {\n      const rules = {\n        email: 'required|email'\n      };\n\n      const user = {};\n      user.email = getState().newsletter.email;\n\n      const { isValid, errors } = allFieldsValidation(user, rules, {\n        'required.email': 'Email is required.',\n        'email.email': 'Email format is invalid.'\n      });\n\n      if (!isValid) {\n        return dispatch({ type: SET_NEWSLETTER_FORM_ERRORS, payload: errors });\n      }\n\n      const response = await axios.post(\n        `${API_URL}/newsletter/subscribe`,\n        user\n      );\n\n      const successfulOptions = {\n        title: `${response.data.message}`,\n        position: 'tr',\n        autoDismiss: 1\n      };\n\n      dispatch({ type: NEWSLETTER_RESET });\n      dispatch(success(successfulOptions));\n    } catch (error) {\n      handleError(error, dispatch);\n    }\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,QAAQ,iCAAiC;AACzD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,iBAAiB,EACjBC,0BAA0B,EAC1BC,gBAAgB,QACX,aAAa;AACpB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC/C,OAAO;IACLC,IAAI,EAAET,iBAAiB;IACvBU,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAGA,CAAA,KAAM;EACzC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,KAAK,GAAG;QACZC,KAAK,EAAE;MACT,CAAC;MAED,MAAMC,IAAI,GAAG,CAAC,CAAC;MACfA,IAAI,CAACD,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAACI,UAAU,CAACF,KAAK;MAExC,MAAM;QAAEG,OAAO;QAAEC;MAAO,CAAC,GAAGf,mBAAmB,CAACY,IAAI,EAAEF,KAAK,EAAE;QAC3D,gBAAgB,EAAE,oBAAoB;QACtC,aAAa,EAAE;MACjB,CAAC,CAAC;MAEF,IAAI,CAACI,OAAO,EAAE;QACZ,OAAON,QAAQ,CAAC;UAAEH,IAAI,EAAER,0BAA0B;UAAES,OAAO,EAAES;QAAO,CAAC,CAAC;MACxE;MAEA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC9B,GAAEhB,OAAQ,uBAAsB,EACjCW,IACF,CAAC;MAED,MAAMM,iBAAiB,GAAG;QACxBC,KAAK,EAAG,GAAEH,QAAQ,CAACI,IAAI,CAACC,OAAQ,EAAC;QACjCC,QAAQ,EAAE,IAAI;QACdC,WAAW,EAAE;MACf,CAAC;MAEDf,QAAQ,CAAC;QAAEH,IAAI,EAAEP;MAAiB,CAAC,CAAC;MACpCU,QAAQ,CAACd,OAAO,CAACwB,iBAAiB,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdzB,WAAW,CAACyB,KAAK,EAAEhB,QAAQ,CAAC;IAC9B;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}