{"ast":null,"code":"/*\n *\n * WishList actions\n *\n */\n\nimport { success, warning } from 'react-notification-system-redux';\nimport axios from 'axios';\nimport { FETCH_WISHLIST, SET_WISHLIST_LOADING } from './constants';\nimport handleError from '../../utils/error';\nimport { API_URL } from '../../constants';\nexport const updateWishlist = (isLiked, productId) => {\n  return async (dispatch, getState) => {\n    try {\n      if (getState().authentication.authenticated === true) {\n        const response = await axios.post(`${API_URL}/wishlist`, {\n          isLiked,\n          product: productId\n        });\n        const successfulOptions = {\n          title: `${response.data.message}`,\n          position: 'tr',\n          autoDismiss: 1\n        };\n        if (response.data.success === true) {\n          dispatch(success(successfulOptions));\n          dispatch(fetchWishlist());\n        }\n      } else {\n        const retryOptions = {\n          title: `Please login to wishlist a product`,\n          position: 'tr',\n          autoDismiss: 1\n        };\n        dispatch(warning(retryOptions));\n      }\n    } catch (error) {\n      handleError(error, dispatch);\n    }\n  };\n};\n\n// fetch wishlist api\nexport const fetchWishlist = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: SET_WISHLIST_LOADING,\n        payload: true\n      });\n      const response = await axios.get(`${API_URL}/wishlist`);\n      dispatch({\n        type: FETCH_WISHLIST,\n        payload: response.data.wishlist\n      });\n    } catch (error) {\n      handleError(error, dispatch);\n    } finally {\n      dispatch({\n        type: SET_WISHLIST_LOADING,\n        payload: false\n      });\n    }\n  };\n};","map":{"version":3,"names":["success","warning","axios","FETCH_WISHLIST","SET_WISHLIST_LOADING","handleError","API_URL","updateWishlist","isLiked","productId","dispatch","getState","authentication","authenticated","response","post","product","successfulOptions","title","data","message","position","autoDismiss","fetchWishlist","retryOptions","error","type","payload","get","wishlist"],"sources":["D:/origin tribe/mern-ecommerce-master/client/src/containers/WishList/actions.js"],"sourcesContent":["/*\n *\n * WishList actions\n *\n */\n\nimport { success, warning } from 'react-notification-system-redux';\nimport axios from 'axios';\n\nimport { FETCH_WISHLIST, SET_WISHLIST_LOADING } from './constants';\nimport handleError from '../../utils/error';\nimport { API_URL } from '../../constants';\n\nexport const updateWishlist = (isLiked, productId) => {\n  return async (dispatch, getState) => {\n    try {\n      if (getState().authentication.authenticated === true) {\n        const response = await axios.post(`${API_URL}/wishlist`, {\n          isLiked,\n          product: productId\n        });\n\n        const successfulOptions = {\n          title: `${response.data.message}`,\n          position: 'tr',\n          autoDismiss: 1\n        };\n\n        if (response.data.success === true) {\n          dispatch(success(successfulOptions));\n          dispatch(fetchWishlist());\n        }\n      } else {\n        const retryOptions = {\n          title: `Please login to wishlist a product`,\n          position: 'tr',\n          autoDismiss: 1\n        };\n        dispatch(warning(retryOptions));\n      }\n    } catch (error) {\n      handleError(error, dispatch);\n    }\n  };\n};\n\n// fetch wishlist api\nexport const fetchWishlist = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: SET_WISHLIST_LOADING, payload: true });\n\n      const response = await axios.get(`${API_URL}/wishlist`);\n\n      dispatch({ type: FETCH_WISHLIST, payload: response.data.wishlist });\n    } catch (error) {\n      handleError(error, dispatch);\n    } finally {\n      dispatch({ type: SET_WISHLIST_LOADING, payload: false });\n    }\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,EAAEC,OAAO,QAAQ,iCAAiC;AAClE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,aAAa;AAClE,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAO,MAAMC,cAAc,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAK;EACpD,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,IAAIA,QAAQ,CAAC,CAAC,CAACC,cAAc,CAACC,aAAa,KAAK,IAAI,EAAE;QACpD,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAE,GAAET,OAAQ,WAAU,EAAE;UACvDE,OAAO;UACPQ,OAAO,EAAEP;QACX,CAAC,CAAC;QAEF,MAAMQ,iBAAiB,GAAG;UACxBC,KAAK,EAAG,GAAEJ,QAAQ,CAACK,IAAI,CAACC,OAAQ,EAAC;UACjCC,QAAQ,EAAE,IAAI;UACdC,WAAW,EAAE;QACf,CAAC;QAED,IAAIR,QAAQ,CAACK,IAAI,CAACnB,OAAO,KAAK,IAAI,EAAE;UAClCU,QAAQ,CAACV,OAAO,CAACiB,iBAAiB,CAAC,CAAC;UACpCP,QAAQ,CAACa,aAAa,CAAC,CAAC,CAAC;QAC3B;MACF,CAAC,MAAM;QACL,MAAMC,YAAY,GAAG;UACnBN,KAAK,EAAG,oCAAmC;UAC3CG,QAAQ,EAAE,IAAI;UACdC,WAAW,EAAE;QACf,CAAC;QACDZ,QAAQ,CAACT,OAAO,CAACuB,YAAY,CAAC,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdpB,WAAW,CAACoB,KAAK,EAAEf,QAAQ,CAAC;IAC9B;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMa,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,OAAOb,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC;QAAEgB,IAAI,EAAEtB,oBAAoB;QAAEuB,OAAO,EAAE;MAAK,CAAC,CAAC;MAEvD,MAAMb,QAAQ,GAAG,MAAMZ,KAAK,CAAC0B,GAAG,CAAE,GAAEtB,OAAQ,WAAU,CAAC;MAEvDI,QAAQ,CAAC;QAAEgB,IAAI,EAAEvB,cAAc;QAAEwB,OAAO,EAAEb,QAAQ,CAACK,IAAI,CAACU;MAAS,CAAC,CAAC;IACrE,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdpB,WAAW,CAACoB,KAAK,EAAEf,QAAQ,CAAC;IAC9B,CAAC,SAAS;MACRA,QAAQ,CAAC;QAAEgB,IAAI,EAAEtB,oBAAoB;QAAEuB,OAAO,EAAE;MAAM,CAAC,CAAC;IAC1D;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}